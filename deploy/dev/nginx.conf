events {

}

http {

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;

        underscores_in_headers on;


        # AUTHENTICATION

        location ~ /authentication/api {
            rewrite ^/authentication/api/(.*)$ /api/$1 break;
            proxy_pass http://host.docker.internal:4001;
            proxy_pass_request_headers on;
        }

        location  = /authentication/sockjs-node {
            proxy_pass http://host.docker.internal:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        location  /authentication {
            proxy_pass http://host.docker.internal:3001;
        }

        # PROJECT

        location  /api {
            rewrite ^/authentication/api/(.*)$ /api/$1 break;
            proxy_pass http://host.docker.internal:4000;
            proxy_pass_request_headers on;

        }

        location =  /sockjs-node {
            proxy_pass http://host.docker.internal:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        location  / {
            proxy_pass http://host.docker.internal:3000;
        }


        location  /socket.io/ {
          proxy_set_header Host $host;

          proxy_pass http://host.docker.internal:4000;
          proxy_redirect off;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
       }

    }
}
